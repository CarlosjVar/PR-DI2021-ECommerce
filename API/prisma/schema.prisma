generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admins {
  id     Int   @id @default(autoincrement())
  userId Int   @unique
  Users  Users @relation(fields: [userId], references: [id])
}

model Categories {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(20)
  Products Products[]
}

model Clients {
  id     Int      @id @default(autoincrement())
  userId Int      @unique
  Users  Users    @relation(fields: [userId], references: [id])
  Orders Orders[]
}

model OrderDetails {
  id        Int      @default(autoincrement())
  orderId   Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  productId Int
  Orders    Orders   @relation(fields: [orderId], references: [id])
  Products  Products @relation(fields: [productId], references: [id])

  @@id([id, orderId])
  @@index([orderId], name: "FK_Orders_OrderDetails")
  @@index([productId], name: "FK_Products_OrderDetails")
}

model Orders {
  id           Int            @id @default(autoincrement())
  clientId     Int
  totalPrice   Decimal        @db.Decimal(10, 2)
  createdAt    DateTime       @db.DateTime(0)
  delivered    Boolean        @db.Bit(1)
  Clients      Clients        @relation(fields: [clientId], references: [id])
  OrderDetails OrderDetails[]
  Preorders    Preorders?
  Sales        Sales?

  @@index([clientId], name: "FK_Clients_Orders")
}

model Preorders {
  id          Int     @id @default(autoincrement())
  orderId     Int     @unique
  isCancelled Boolean @db.Bit(1)
  Orders      Orders  @relation(fields: [orderId], references: [id])
}

model Products {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(50)
  quantity                Int
  price                   Decimal                   @db.Decimal(10, 2)
  categoryId              Int
  imageFileName           String?                   @default("default_img") @db.VarChar(40)
  createdAt               DateTime?                 @default(now()) @db.DateTime(0)
  Categories              Categories                @relation(fields: [categoryId], references: [id])
  OrderDetails            OrderDetails[]
  ProductsXSpecifications ProductsXSpecifications[]

  @@index([categoryId], name: "FK_Categories_Products")
}

model ProductsXSpecifications {
  id              Int            @id @default(autoincrement())
  value           String?        @db.VarChar(50)
  productId       Int
  specificationId Int
  Products        Products       @relation(fields: [productId], references: [id])
  Specifications  Specifications @relation(fields: [specificationId], references: [id])

  @@index([productId], name: "FK_Products_ProductId")
  @@index([specificationId], name: "FK_Specifications_ProductsXSpecifications")
}

model Sales {
  id            Int    @id @default(autoincrement())
  orderId       Int    @unique
  paypalOrderId String @db.Char(17)
  paypalPayerId String @db.Char(13)
  Orders        Orders @relation(fields: [orderId], references: [id])
}

model Specifications {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(40)
  isNumeric               Boolean                   @db.Bit(1)
  ProductsXSpecifications ProductsXSpecifications[]
}

model Users {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(50)
  fullName  String    @db.VarChar(60)
  password  String?   @db.Char(60)
  createdAt DateTime? @default(now()) @db.DateTime(0)
  Admins    Admins?
  Clients   Clients?
}
